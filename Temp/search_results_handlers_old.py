from loader import bot
import json
from datetime import datetime
from telebot.types import CallbackQuery, InputMediaPhoto
from handlers.API_handlers import request_hotels
from handlers.API_handlers import request_photo
from states.travel_information import TravelInfoState
from database.history_db_methods import add_hotels_to_history_db
from keyboards.inline_keyboards.default_keyboard import default_keyboard
from keyboards.inline_keyboards.next_hotel import next_hotel_keyboard
from utils.show_hotels import show_hotel


@bot.callback_query_handler(func=lambda call: call.data.startswith('{'),
                            state=TravelInfoState.show_hotels)
def results_handler(callback: CallbackQuery) -> None:
    """
    –í—ã–¥–∞—á–∞ –æ—Ç–µ–ª–µ–π –ø–æ –æ–¥–Ω–æ–º—É.
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π –≤ –±–¥ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞.

    :param callback: –û–±—ä–µ–∫—Ç CallBackQuery
    :type: CallbackQuery
    :return: None
    """
    chat_id = callback.message.chat.id
    bot.delete_message(chat_id, callback.message.id)

    callback_json = json.loads(callback.data)
    method = callback_json['method']
    page_num = callback_json['page_num']
    hotel_num = callback_json['hotel_num']

    with bot.retrieve_data(callback.from_user.id, chat_id) as data:
        if method == 'INIT':
            data['hotels_list'] = request_hotels(data, page_num)
        hotels_list = data['hotels_list']

    if hotels_list:
        hotels_list_length = len(hotels_list)

        if hotels_list_length == 0:
            bot.send_message(chat_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–µ–ª—è üòî\n'
                                      '–•–æ—á–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫?',
                                      reply_markup=default_keyboard())

        elif hotels_list_length == hotel_num + 1 and hotel_num != 24:
            bot.send_message(chat_id, '–û—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ –Ω–µ—Ç. –•–æ—á–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫?',
                                      reply_markup=default_keyboard())

        else:
            add_hotels_to_history_db(chat_id, hotels_list[hotel_num]['id'], hotels_list[hotel_num]['name'])
            show_hotel(hotels_list[hotel_num], chat_id)

            if hotel_num == 24:
                page_num += 1
                hotel_num = 0
                with bot.retrieve_data(callback.from_user.id, chat_id) as data:
                    data['hotels_list'] = request_hotels(data, page_num)

            bot.send_message(chat_id, '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë?',
                             reply_markup=next_hotel_keyboard('‚û°–ï—â—ë!', 'NEXT', page_num, hotel_num))

    else:
        bot.send_message(chat_id,
                         'üòµ –£–ø—Å, –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫.\n'
                         '–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞, —Å–≤—è–∂–∏—Å—å —Å –º–æ–∏–º –∞–≤—Ç–æ—Ä–æ–º - @Alex_Solokhin',
                         reply_markup=default_keyboard())

    bot.answer_callback_query(callback.id)


@bot.callback_query_handler(func=lambda call: call.data.startswith('PHOTO'))
def show_hotel_photo(callback: CallbackQuery) -> None:
    """
    –í—ã–¥–∞—á–∞ —Ñ–æ—Ç–æ –æ—Ç–µ–ª—è.

    :param callback: –û–±—ä–µ–∫—Ç CallBackQuery
    :type: CallbackQuery
    :return: None
    """

    hotel_id = int(callback.data.split('|')[1])
    photos_list = request_photo(hotel_id)

    if photos_list:
        media_list = []

        for i_photo in photos_list:
            input_media = InputMediaPhoto(i_photo, caption='hi')
            media_list.append(input_media)

        bot.send_media_group(callback.message.chat.id, media_list)

    else:
        bot.send_message(callback.message.chat.id,
                         'üòµ –£–ø—Å, –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫.\n'
                         '–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞, —Å–≤—è–∂–∏—Å—å —Å –º–æ–∏–º –∞–≤—Ç–æ—Ä–æ–º - @Alex_Solokhin',
                         reply_markup=default_keyboard())
    bot.answer_callback_query(callback.id)


@bot.callback_query_handler(func=lambda call: call.data == 'HIDE',
                            state=TravelInfoState.show_hotels)
def hide_hotel(callback: CallbackQuery) -> None:
    """
    –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞.

    :param callback: –û–±—ä–µ–∫—Ç CallBackQuery
    :type: CallbackQuery
    :return: None
    """

    bot.delete_message(callback.message.chat.id, callback.message.id)

    bot.answer_callback_query(callback.id)
